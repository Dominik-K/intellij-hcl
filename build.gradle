/*
 * Copyright 2000-2015 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    ext.kotlinVersion='0.13.1513'
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repository.jetbrains.com/repo/"}
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
//    repositories {
//        flatDir {
//            dir '/Users/vlad/devel/idea-plugins/gradle-intellij-plugin/build/libs/'
//        }
//    }
//    dependencies {
//        classpath group: 'org.jetbrains', name: 'intellij-gradle-plugin', version: '0.0.16'
//    }
}

plugins {
    id "org.jetbrains.intellij" version "0.0.22"
}

version = '0.3.1'
if (System.hasProperty('build.number')) {
    version = "$version.${System.getProperty("build.number")}"
}
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "http://repository.jetbrains.com/repo/"}
//    maven { url "http://repo.labs.intellij.net/hub"}
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: "kotlin"

intellij {
    version '14.0.4'
//    plugins 'coverage'
    pluginName 'intellij-hcl'
    sandboxDirectory="${project.projectDir}/idea-sandbox"
    updateSinceUntilBuild = false
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    compile 'com.beust:klaxon:0.14'
    compile('org.reflections:reflections:0.9.10') {
        exclude group: 'com.google.guava', module: 'guava'
    }
}

sourceCompatibility = "1.6"
targetCompatibility = "1.6"

sourceSets {
    main {
        java {
            srcDirs 'src', 'gen'
        }
        kotlin {
            srcDir 'src'
        }
        resources {
            srcDir 'res'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'test-data'
        }
    }
}

test.ignoreFailures = true
test.testLogging.showStandardStreams = true

allprojects {
    plugins.withType(JavaPlugin) {
        test {
            ignoreFailures = true
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}
